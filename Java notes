[abc]4表示a4 b4 c4
[^456]除了456以外任何字符
[a-r]a至r任何
 [a-z[A-Z]]并运算，a-z或A-Z ==[a-zA-Z]
[a-o&&[def]] def
[a-d&&[^bc]] ad
? 0 or 1
* 0 to 999999
+ 1 to 999999
{n}  n times
{n,} at least n
{n,m}  n to m times
A*匹配任意个A
正则表达式中\\用两个
\\d数字\\D非数字
\\s空白字符
\\S非空白字符
\\w可用作标识符的字符
\\W不可用作标识符的字符
\\p{Lower}
\\p{Alpha}
\\p{Alnum}
finalize()//垃圾回收
System.gc()//强制垃圾回收


取得类名
getClass().getname();
判断某实例是不是某类
myobject instanceof ExampleClass//boolean 返回值

接口用interface定义,接口中定义的方法必须是public或abstract
public interface drawTest{
    public void draw();
    }
一个类实现一个接口用implements
public class Parallel extends Quadrangle implements drawTest{
}

Arrays.sort(intervals, new Comparator<int[]>() {
    	public int compare(int[] a, int[] b) {
    	    return (a[1] != b[1] ? Integer.compare(a[1], b[1]) : Integer.compare(b[0], a[0]));
    	}
    });

数组转List
String[] array=new String[3];
List<String> list=Arrays.asList(array);  //不能是ArrayList
反过来
List<String> list=new ArrayList<String>();  
String[] array = (String[])list.toArray(new String[size]);  

Integer[] arr=new Integer[list.size()];
list.toArray(arr);

数组截取某一位置到一位置
String [] results =new String[]{"1","2","3","1","2","3""1","2","3"};
results = Arrays.copyOfRange(results, 0, 5); 

//对数组的[2,6)位进行排序
Arrays.sort(ints2,2,6);

对ArrayList排序
Collections.sort(arrayList);

字符串转Long
long num=Long.parseLong(s.substring(idx,i+1));

PriorityQueue<int[]> pq = new PriorityQueue<>((a, b) -> a[2] - b[2]);
